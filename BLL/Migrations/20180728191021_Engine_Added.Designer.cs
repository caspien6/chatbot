// <auto-generated />
using System;
using BLL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BLL.Migrations
{
    [DbContext(typeof(StoryContext))]
    [Migration("20180728191021_Engine_Added")]
    partial class Engine_Added
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BLL.Models.Game.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Health");

                    b.Property<int>("Mana");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("BLL.Models.Game.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacterId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BLL.Models.Game.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StationId");

                    b.Property<string>("Story");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("BLL.Models.Game.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StateId");

                    b.Property<string>("Title");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.HasIndex("UserId");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("BLL.Models.Game.StoryProcedureState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacterId");

                    b.Property<int?>("StationId");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StationId");

                    b.ToTable("ProcedureStates");
                });

            modelBuilder.Entity("BLL.Models.Game.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Facebook_id")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<string>("Name");

                    b.Property<int?>("machineId");

                    b.HasKey("Id");

                    b.HasIndex("machineId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FluentMachine.Engine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentState");

                    b.HasKey("Id");

                    b.ToTable("Engine");
                });

            modelBuilder.Entity("BLL.Models.Game.Item", b =>
                {
                    b.HasOne("BLL.Models.Game.Character")
                        .WithMany("Items")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("BLL.Models.Game.Station", b =>
                {
                    b.HasOne("BLL.Models.Game.Station")
                        .WithMany("NextStations")
                        .HasForeignKey("StationId");
                });

            modelBuilder.Entity("BLL.Models.Game.Story", b =>
                {
                    b.HasOne("BLL.Models.Game.StoryProcedureState", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("BLL.Models.Game.User")
                        .WithMany("Stories")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BLL.Models.Game.StoryProcedureState", b =>
                {
                    b.HasOne("BLL.Models.Game.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId");

                    b.HasOne("BLL.Models.Game.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId");
                });

            modelBuilder.Entity("BLL.Models.Game.User", b =>
                {
                    b.HasOne("FluentMachine.Engine", "machine")
                        .WithMany()
                        .HasForeignKey("machineId");
                });
#pragma warning restore 612, 618
        }
    }
}
